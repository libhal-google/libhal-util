# All Style settings supported by 'ncc'
StructName: '^[a-z]+[a-z0-9_]*$'
UnionName: '^[a-z]+[a-z0-9_]*$'
ClassName: '^[a-z]+[a-z0-9_]*$'
EnumName: '^[a-z]+[a-z0-9_]*$'
EnumConstantName: '^[a-z]+[a-z0-9_]*$'
FunctionName: '^[a-z]+[a-z0-9_]*[\=\+\/\-\*\>\<\!\|\&\~\^\"\_]*[a-zA-Z0-9_]*$'
ParameterName: '^p_[a-z]+[a-z0-9_]*$'
TypedefName: '^[a-z]+[a-z0-9_]*$'
CppMethod: '^[a-z]+[a-z0-9_]*[\=\+\/\-\*\>\<\!\|\&\~\^\"\_\(\)]*[a-zA-Z0-9_]*$'
Namespace: '^[a-z]+[a-z0-9_]*$'
ConversionFunction: '^.*$'
TemplateTypeParameter: '^.*$'
TemplateNonTypeParameter: '^.*$'
TemplateTemplateParameter: '^.*$'
FunctionTemplate: '^.*$'
ClassTemplate: '^.*$'
ClassTemplatePartialSpecialization: '^.*$'
NamespaceAlias: '^.*$'
UsingDirective: '^.*$'
UsingDeclaration: '^.*$'
TypeAliasName: '^.*$'
ClassAccessSpecifier: '^.*$'
TypeReference: '^.*$'
CxxBaseSpecifier: '^.*$'
TemplateReference: '^.*$'
NamespaceReference: '^.*$'
MemberReference: '^.*$'
LabelReference: '^.*$'
OverloadedDeclarationReference: '^.*$'
VariableReference: '^.*$'
InvalidFile: '^.*$'
NoDeclarationFound: '^.*$'
NotImplemented: '^.*$'
InvalidCode: '^.*$'
UnexposedExpression: '^.*$'
DeclarationReferenceExpression: '^.*$'
MemberReferenceExpression: '^.*$'
CallExpression: '^.*$'
BlockExpression: '^.*$'
IntegerLiteral: '^.*$'
FloatingLiteral: '^.*$'
ImaginaryLiteral: '^.*$'
StringLiteral: '^.*$'
CharacterLiteral: '^.*$'
ParenExpression: '^.*$'
UnaryOperator: '^.*$'
ArraySubscriptExpression: '^.*$'
BinaryOperator: '^.*$'
CompoundAssignmentOperator: '^.*$'
ConditionalOperator: '^.*$'
CstyleCastExpression: '^.*$'
CompoundLiteralExpression: '^.*$'
InitListExpression: '^.*$'
AddrLabelExpression: '^.*$'
StatementExpression: '^.*$'
GenericSelectionExpression: '^.*$'
GnuNullExpression: '^.*$'
CxxStaticCastExpression: '^.*$'
CxxDynamicCastExpression: '^.*$'
CxxReinterpretCastExpression: '^.*$'
CxxConstCastExpression: '^.*$'
CxxFunctionalCastExpression: '^.*$'
CxxTypeidExpression: '^.*$'
CxxBoolLiteralExpression: '^.*$'
CxxNullPointerLiteralExpression: '^.*$'
CxxThisExpression: '^.*$'
CxxThrowExpression: '^.*$'
CxxNewExpression: '^.*$'
CxxDeleteExpression: '^.*$'
CxxUnaryExpression: '^.*$'
PackExpansionExpression: '^.*$'
SizeOfPackExpression: '^.*$'
LambdaExpression: '^.*$'
ObjectBoolLiteralExpression: '^.*$'
ObjectSelfExpression: '^.*$'
UnexposedStatement: '^.*$'
LabelStatement: '^.*$'
CompoundStatement: '^.*$'
CaseStatement: '^.*$'
DefaultStatement: '^.*$'
IfStatement: '^.*$'
SwitchStatement: '^.*$'
WhileStatement: '^.*$'
DoStatement: '^.*$'
ForStatement: '^.*$'
GotoStatement: '^.*$'
IndirectGotoStatement: '^.*$'
ContinueStatement: '^.*$'
BreakStatement: '^.*$'
ReturnStatement: '^.*$'
AsmStatement: '^.*$'
CxxCatchStatement: '^.*$'
CxxTryStatement: '^.*$'
CxxForRangeStatement: '^.*$'
MsAsmStatement: '^.*$'
NullStatement: '^.*$'
DeclarationStatement: '^.*$'
TranslationUnit: '^.*$'
UnexposedAttribute: '^.*$'
CxxFinalAttribute: '^.*$'
CxxOverrideAttribute: '^.*$'
AnnotateAttribute: '^.*$'
AsmLabelAttribute: '^.*$'
PackedAttribute: '^.*$'
PureAttribute: '^.*$'
ConstAttribute: '^.*$'
NoduplicateAttribute: '^.*$'
PreprocessingDirective: '^.*$'
MacroDefinition: '^[A-Z_][A-Z0-9_]*$'
MacroInstantiation: '^[A-Z_][A-Z0-9_]*$'
InclusionDirective: '^.*$'
VariableName:
    ScopePrefix:
        Global: '^[a-z]+[a-z0-9_]*$'
        Static: '^[a-z]+[a-z0-9_]*$'
        ClassMember: '^m_[a-z]+[a-z0-9_]*$'
    DataTypePrefix:
        String: ''
        Integer: ''
        Bool: ''
        Pointer: ''
    # Allow snake_case, and CAP_CASE
    # Pattern: '^.*$'